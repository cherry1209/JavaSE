/*
   关于java语言当中的方法：
   
       1、方法怎么定义，语法结构
       
       【修饰符列表】 返回值类型  方法名（形式参数列表）{
             方法体；
         }
         
       2、对以上的语法结构进行解释说明：
       
          2.1关于修饰符列表
          
              *可选项，不是必须的
              
              *目前统一写成：public static【以后说】
              
              *方法的修饰符列表当中“有static关键字”的话，怎么调用这个方法？
                - 类名.方法名（实际参数列表）；
                
          2.2返回值类型
          
          *什么是返回值
          
             一个方法是可以完成某个特定功能的，这个功能结束之后大多数都是需要返回
             最终执行结果的，执行结果可能是一个具体存在的数据。而这个具体存在的数
             据就是返回值
             
          *返回值类型
             
             返回值是一个具体存在的数据，数据都是有类型的，此处需要指定的是返回值
             的具体类型
             
          *返回值类型都是可以指定哪些类型
             
             java任意一种类型都可以，包括基本数据类型和引用型数据类型
             
          *也可能这个方法执行结束之后不返回任何数据，当一个方法执行结束之后不返回任
           何数据的话，返回值类型位置必须编写：void关键字
           
          *返回值类型若不是void，表示这个方法执行结束之后必须返回一个具体的数值。 
           当方法执行结束的时候没有返回任何数据的话编译器报错，怎么返回值呢，代码怎么写呢？
           ---return 值；
           并且要求“值”的数据类型必须和方法的返回值类型一致，不然编译报错
           
          *返回值类型是void的时候，在方法体当中不能编写“return 值；”这样的语句
          
          *只要带有return关键字的语句执行，return语句所在的方法结束
          
       2.3方法名：
          *只要是合法的标识符就行
          *方法名最好见名知意
          *方法名最好是动词
          *方法名首字母要求小写，后面每个单词首字母大写
          
       2.4形式参数列表：简称形参
          *形参是局部变量：int a; double d;float c;String s.....
          *形参的个数可以是：0-N个
          *多个形参之间用“逗号”隔开
          *形参中起决定性作用的是形参的数据类型，形象的名字就是局部变量的名字
          *方法调用的时候，实际给这个方法传递的真实数据被称为：实际参数，简称实参
          例如：
           public static int sum(int 变量名,int 合法的标识符就行){//(int a,int b)是参数列表
           }
           方法调用
           sum（"abc","def"）;编译错误
           
           2.5方法体必须由大括号括起来，方法体当中的代码有顺序，遵循自上而下的顺序依次执行。
           并且方法体由java语句构成，每一个java语句以“;”结尾
           
        3、方法怎么调用？
           方法之定义不去调用是不会执行的，只有在调用的时候才会执行。
           语法规则：【方法的修饰符列表当中有static】
                    类名.方法名（参数列表）;【这是一条java语句，表示调用某个类的某个方法，传递这样的参数】                   
              
         
*/
//类名
//类体中不能直接编写java语句，除声明变量之外
//方法出现在类体当中
//public 表示公开的
//class表示定义类
//Method02是一个类名
////表示定义一个公开的类，起名Method02，由于是公开的类，所以源文件名必须Method02
public class Method02//汽车工厂
{
	//类名
	//类体中不能直接编写java语句，除声明变量之外
	//方法出现在类体当中
	
	//方法
	//public表示公开的
	//static表示静态的
	//void表示方法执行结束之后不返回任何数据
	//main是方法名：主方法
	//(String[] args):形式参数列表，其中String[]是一种引用数据类型，
	//args是一个局部变量的变量名
	//所以以下只有args这个局部变量的变量名是随意的
	//主方法就需要这样固定编号，这是程序的入口【sun规定的，必须这样写】
	//修饰符列表】  返回值类型  方法名（形式参数列表）{
	public static     void       main(String[] args){
		//这里的程序是一定会执行的
		//main方法是JVM负责调用的，是一个入口位置
		//从这里作为起点开始执行程序
		//既然是这样，就可以在这里编写java语句来调用其他的方法
		//调用Method02的sum方法，传递两实参
		Method02.sum(10,20);//(10,20)实参列表【实际上执行到这里main方法暂停了，
		//进入sum方法执行，sum方法执行结束之后表示main方法的107行结束】
		
		//注意：方法体当中的代码是有顺序的，遵循自上而下的顺序依次执行
		//第110行的程序执行不结束，无法执行第111行的程序
		
		//一个方法可以被重复使用，重复调用
		int a = 100;
		Method02.sum(a,500);//(a,500)实参列表
		
		//再次调用方法
		int k = 10;
		int j = 30;
		Method02.sum(k,j);//(k,j)实参列表
		
		//调用这个方法
	}
	
	//自定义方法，不是程序的入口
	//方法作用：计算两个int型数据的和，不要求返回结果，但是要求将结果直接输出到控制台
	//修饰符列表：public static
	//返回值类型：void
	//方法名：sum
	//形式参数列表：（int x，int y）
	//方法体：主要任务是求和之后输出计算结果
	//定义一个方法
	//一个车间
	public static void sum(int x,int y)//（int x,int y）形参列表
	{
		System.out.println(x + "+" + y + "=" + ( x + y ));
	}
}
