/*
  面向对象【java语句的核心机制，最重要的内容，java语句的特色】
  
  
  *面向过程和面向对象的区别：因果关系【集成显卡的开发思路】
    --面向过程：主要关注点是：实现的具体过程，可以达到快速开发，
      前期投入成本较低。
  
     *优点：对于业务逻辑比较简单的程序，可以达到快速开发，前期开发成本较低。
    
     *缺点：采用面向过程的方式开发很难解决非常复杂的业务逻辑，另外面向过程的
      方式导致软件元素之间的“非常高，只要其中一环出问题，整个系统受到影响，导致
      最终的软件“扩展力”差，另外，由于没有独立体的概念，所以无法达到组件复用。
      
   --面向对象：主要关注点是：主要关注对象【独立体】能完成哪些功能。【独立显卡的开发思路】
     
     *优点：耦合度底，扩展力强。更容易解决现实世界当中更复杂的业务逻辑，组件复用性强。
     
     *缺点：前期投入成本较高，需要进行独立体的抽取，大量的系统分析与设计。
     
   --c语言是纯面向过程的、c++半面向对象、java纯面向对象
   
   --现在出现的一些新的编程语言多半是面向对象的，人在认识现实世界的时候以面向对象的方式。
   
   --面向对象更符合人的思维方式
    
    *面向对象的三大特征：
       --封装
       --继承
       --多态
    
    所有面向对象的编程语言都有这三大特征。
    
    采用面向对象的方式开发一个软件，生命周期当中：【整个生命周期中贯穿使用OO面向对象方式】
        *面向对象的分析：OOA
        *面向对象的设计：OOD
        *面向对象的编程：OOP
        
    *类和对象的概念
    
       *什么是类？
        --类在现实世界中是不存在的，是一个模板，是一个概念。是人类大脑思考抽象的结果。
        --类代表一类事物
        --在现实世界当中，对象A与对象B之间具有共同特征，进行抽象总结出一个模板，这个模板被称为类。
          
      *什么是对象？
        --对象是实际存在的个体，现实世界当中实际存在。
        
      *描述一个整个软件开发的过程：
        --程序员先观察现实世界，从现实世界当中寻找对象
        --寻找了N个对象之后，发现所有的对象都具有共同特征
        --程序员在大脑中形成可一个模板【类】
        --java程序员可以通过java代码来表述一个类
        --java程序员中有了类的定义
        --然后通过类就可以创建对象
        --有了对象之后，可以让对象直接协作起来形成一个系统
        
      *类--【实例化】-->对象
      
      *对象又被称之为实例/instance
      
      *对象--【抽象】-->类
      
      *重点：
         类描述的是对象的共同特征。
           共同特征例如：身高特征
  
         这个身高特征在访问的时候，必须先创建对象，通过对象去访问这个特征。
         因为这个特征具体的某个对象上之后，值不同。有的身高1.80，有的对象身高2.80
         
      *一个类主要描述什么信息呢？
       一个类主要描述的是 状态 + 动作。
       状态信息：名字、身高、性别、年龄、
       动作信息：吃、唱歌、跳舞、学习
       
       状态---->一个类的属性
       动作---->一个类的方法
       
     *类{
         属性;//描述对象的状态信息
         方法; //描述对象的动作信息
        }
        
        注意：状态和动作当具体到某个对象上之后，发现最终的结果可能不一样。
       
      *类的定义【从这里开始编写代码】
        语法结构：
          [修饰符列表] class 类名{
          
          }
          
        学生类，描述所有学生对象的共同特征：
           学生对象有哪些状态信息：
             *学号【int】
             *名字【String】
             *性别【boolean】
             *年龄【int】【年龄是一个属性，年龄是一个数据，是数据就应该有数据类型】
             *住址【String】
             
          学生对象有哪些动作信息：
             *吃饭
             *睡觉
             *学习
             *玩
             *唱唱歌
 对象和引用：
   对象和引用的概念：
   *对象：目前在使用new运算符在堆内存中开辟的内存空间称为对象。
   *引用：是一个变量，不一定是局部变量，还可能是成员变量。引用保存了内存地址，指向了堆内存当中的对象。
   *所有访问实例相关的数据，都需要通过“引用.”的方式访问，因为只有通过引用才能找到对象。
   *只有一个空的引用，访问对象的实例相关的数据会出现空指针异常。
   
   class Student{
      Computer com;//com是一个引用【实例变量】
      puvlic static void doSome(){
      Computer cc;//cc是一个引用【局部变量】
      }
   }
   
 参数的传递：
   主要研究和学习的是方法在调用的时候，实际到参数传递的问题，到底是怎么传递数据的呢？
   值传递
   int i = 10;
   int j = i;//i传递给j，实际上只是将i变量中保存的10传递给j了，j实际上是一块全新的内存空间。
        
*/
//定义一个类，类名Student
//Student是一个类，代表了所有的学生对象。是一个学生模板。
public class Student//定义一个公开的类，起名Student
{
	//属性【描述的是对象的状态信息】
	//属性通常采用变量的方式来定义
	//在类体当中，方法体之外定义的变量被称之为“成员变量”
	//成员变量没有赋值，系统赋默认值：一切向0看齐、
	
	//学号
	int no;
	
	//性别
	boolean sex;
	
	//年龄
	int age;
	
	//住址
	String address;
}
