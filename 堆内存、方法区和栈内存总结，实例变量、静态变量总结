/*
     1、方法只定义，不调用，是不会执行的，并且在JVM中也不会给该方法分配“运行所属”的内存空间
     只有在调用这个方法的时候，才会动态的给这个方法分配所属的内存空间
     
     在JVM内存划分上有这样三块主要的内存空间（当然除了这三块之外还有其他的内存空间）
        *方法区内存
        *堆内存
        *栈内存
        
     2、堆内存和方法区内存各有一个，一个线程一个栈内存。
     
     3、方法调用的时候，该方法所需的内存空间在栈内存中分配，称之为压栈。方法执行结束之后，该方法所属的内存空间释放，称之为弹栈。
     
     4、栈中主要存储的是方法体当中的局部变量。
     
     5、方法的代码片段以及整个类的代码片段都被存储到方法区内存当中，在类加载的时候这些代码片段会载入。
     
     6、在程序执行过程中使用new运算符创建的java对象，存储在堆内存当中，对象内部有实例变量，所以实例变量存储在堆内存中。
     
     7、变量分类：
       *局部变量【方法体中声明】
       *成员变量【方法体外声明】
          *实例变量【前边的修饰符没有static】
          *静态变量【前边的修饰符中有static】
     8、静态变量存储在方法区内存当中。【先背会】
     
     9、三块内存当中变化最频繁的是栈内存，最先有数据的是方法区内存，垃圾回收器主要针对的是堆内存。
     
     10、垃圾回收器【自动垃圾回收机制、GC机制】什么时候会考虑将某个java对象的内存回收？
         *当堆内存当中的java对象成为垃圾数据的时候，会被垃圾回收器回收、
         *什么时候堆内存中的java对象会变成垃圾？
           没有更多的引用指向他的时候。
           这个对象无法被访问，因为访问对象只能通过引用的方式访问。   
*/
