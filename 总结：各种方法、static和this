package com.bjpowernode.javase.ThisTest;

/*
 * 方法什么时候定义为静态的？
 *    方法描述的是动作，当所有的对象执行这个动作的时候，最终产生影响是一样的，那么
 *    这个动作已经不再属于某一个对象动作了，可以将这个动作提升为类级别的动作，模板
 *    级别的动作。
 *    
 * 静态方法中无法直接访问实例变量和实例方法。
 * 
 * 大多数方法多定义为实例方法，一般一个行为或者一个动作在发生的时候，都需要对象的参与。
 * 但是也有例外，例如：大多数“工具类”中的方法都是静态方法，因为工具类就是方便编程，为了
 * 方便方法的调用，自然不需要new对象是最好的。
 */
public class StaticTest01 {
	//实例变量
    int i;
    
    //实例方法
    public void dosome(){
    	System.out.println("dosome");
    }
    
    static String name = "zhangsan";
    
    //静态方法【静态方法里没有this】
	public static void main(String[] args) {
		System.out.println(StaticTest01.name);
		StaticTest01 zhangsan = new StaticTest01();
		zhangsan.i = 10;
		zhangsan.dosome();
		System.out.println(zhangsan.i);

	}

}

/*
 * 总结：
 * 重点：没有static关键字的方法被称为“实例方法”，实例方法怎么访问？“引用.”
 * 重点：没有static关键字的变量被称为“实例变量”
 * 注意：当一个行为/动作执行的过程当中是需要对象参与的，那么这个方法一定要定义为“实例方法”，不要带static关键字

 * 有static关键字修饰的方法怎么调用：类名.方法名(实参);
 * 没有static关键字修饰的方法怎么调用：引用.方法名(实参);

 * class类{
 * 静态代码块；【类加载的时候执行】
 * 实例代码块；【构造方法执行时执行，构造方法执行几次他执行几次】
 * 
 * 静态变量；【静态变量类加载的时候初始化，存在方法区中，“类名.”的方式访问】
 * 实例变量；【构造方法执行的时候初始化，存在堆内存中，“引用."的方式访问】
 * 
 * 构造方法；【没有返回值】【构造方法名和类名相同】【构造方法作用：创建对象】
 * 
 * 静态方法；【调用方法：类名.】
 * 实例方法；【调用方法：引用.】
 * }
 * 
 * 关于java类中的构造方法：
 *    1、构造方法又被称为构造函数/构造器/Constructor
 *    2、构造方法语法结构：
 *      【修饰符列表】  构造方法名(形式参数列表){
 *          构造方法体;
 *      }
 *    3、回顾普通方法的语法结构：
 *      【修饰符列表】 返回值类型   方法名(性是参数列表){
 *           方法体;
 *      }
 *  
 *    4、对于构造方法来说，“返回值类型”不需要指定，并且也不能写void，
 *       只要写上void，那么这个方法就成为普通方法了。
 *   
 *    5、对于构造方法来说，构造方法的方法名必须和类名保持一致。
 *   
 *   构造方法的作用：
 *        1、创建对象
 *        2、创建对象的同时，初始化实例变量的内存空间
 *        
 *   成员变量之实例变量，属于对象级别的变量，这种变量必须先有对象才能有实例变量
 *   实例变量没有手动赋值的时候，系统默认赋值，那么这个系统默认赋值是在什么时候完成的呢？
 *      是在类加载的时候嘛？
 *         不是，因为类加载的时候只加载了代码片段，还没来得及创建对象。所以此时实例变量并没有初始化。
 *         
 *         实际上，实例变量的内存空间是在构造方法执行过程当中完成开辟的。完成初始化的。
 *         系统在默认赋值的时候，也是在构造方法执行过程当中完成的赋值。
 *         
 * 
 * this：
 *     1、this是一个关键字
 *     2、this是一个引用，this是一个变量，this变量中保存了内存地址指向自身，this存储在JVM堆内存     java对象内部。
 *     3、创建100个java对象，每一个对象都有this，也就说有100个不同的this
 *     4、this可以出现在“实例方法”当中，this指向当前正在执行这个动作的对象。【this代表当前对象】
 *     5、this在多数情况下是可以省略不写的
 *     6、this不能使用在带有static的方法当中
 *     
 *this可以用在哪里：
 *   1、可以使用在实例方法当中，代表当前对象【语法格式：this.】
 *   2、可以使用在构造方法当中，通过当前的构造方法调用其他的构造方法【语法格式：this(实参);】
 *   
 *   重点【记忆】：this();这种语法只能出现在构造函数的第一行。
 *
 * static：
 *     1、static英语单词翻译为静态的
 *     2、static修饰的方法是静态方法
 *     3、static修饰的变量是静态变量
 *     4、所有static修饰的元素都称为静态的，都可以使用“类名.”的方式访问。
 *     5、static修饰的所有元素都是类级别的特征，与具体的对象无关。
 *     
 *  什么时候成员变量声明为实例变量呢？
 *      -所有对象都有这个属性，但是这个属性的值会随着对象的变化而变化【不同对象的这个属性具体的值不同】
 *      
 *  什么时候成员变量声明为静态变量呢？
 *      -所有对象都有这个属性，并且所有对象的这个属性的值是一样的，建议定义为静态变量，节省内存的开销。
 *      
 *  静态变量在类加载的时候初始化，内存在方法区中开辟。访问的时候不需要创建对象，直接使用“类名.静态变量名”的方式访问
 */
