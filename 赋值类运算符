/*

   关于java中的赋值运算符：
   
       赋值类运算符包括两种：
       
         *基本的赋值运算符
           =
           
         *扩展类的赋值运算符
           +=
           -=
           *=
           /=
           %=
           
     1、赋值类的运算符优先级：先执行等号右边的表达式，将执行结果赋值给左边的变量
     
     2、注意以下代码：
        byte x = 10;
	  	  x +=5;//等同于x =(byte)(x + 5)，其实并不等同于：x = x + 5;
	  	  
	   3、重要结论：扩展类的赋值运算符不改变运算结果类型，假设最初这个变量的类型是byte
	      类型，无论怎么进行追加或追减，最终该变量的数据类型还是byte类型
    
*/
public class OperatorTest03
{
	  public static void main(String[] args)
	  {
	  	//扩展类赋值运算符【+=运算符可以翻译为“追加/追减”】
	  	int i = 10;
	  	i +=5;
	  	
	  	//--------------------------------------------------------
	  	
	  	//10没有超出byte取值范围，可以直接赋值
	  	byte b = 10;
	  	//b = 15;//可以，编译通过；
	  	//编译错误，为什么？
	  	//编译器只检查语法，不运行程序，编译器发现b+5的类型是int类型，b变量的数据类型是byte
	  	//大容量向小容量转换需加强制类型转换符，所以以下程序编译报错
	  	//b = b + 5;
	  	
	  	//纠正错误
	  	b =(byte)(b + 5);
	  	System.out.println(b);//15
	  	
	  	byte x = 10;
	  	x +=5;//等同于x =(byte)(x + 5)，其实并不等同于：x = x + 5;
	  	System.out.println(x);//15
	  	
	  	byte z = 0;
	  	z +=128;//等同于z =(byte)z + 128)
	  	System.out.println(z);//-138【损失精度】
	  }
	
}
